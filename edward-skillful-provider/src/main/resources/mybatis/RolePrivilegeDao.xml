<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.provider.dao.RolePrivilegeDao">
  <resultMap id="Base_Result_Map" type="com.provider.model.RolePrivilege">
    <constructor>
      <idArg column="record_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="privilege_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Criteria_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, role_id, privilege_code, create_time, modify_time
  </sql>
  <select id="selectByCriteria" parameterType="com.provider.model.RolePrivilegeCriteria" resultMap="Base_Result_Map">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_role_privilege
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="mysqlDialectPage" />
  </select>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="Base_Result_Map">
    select 
    <include refid="Base_Column_List" />
    from t_role_privilege
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from t_role_privilege
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.provider.model.RolePrivilegeCriteria">
    delete from t_role_privilege
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.provider.model.RolePrivilege">
    <selectKey keyProperty="recordId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role_privilege (role_id, privilege_code, create_time, 
      modify_time)
    values (#{roleId,jdbcType=INTEGER}, #{privilegeCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.provider.model.RolePrivilege">
    <selectKey keyProperty="recordId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role_privilege
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="privilegeCode != null">
        privilege_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="privilegeCode != null">
        #{privilegeCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByCriteriaSelective" parameterType="map">
    update t_role_privilege
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.privilegeCode != null">
        privilege_code = #{record.privilegeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update t_role_privilege
    set record_id = #{record.recordId,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      privilege_code = #{record.privilegeCode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByIdSelective" parameterType="com.provider.model.RolePrivilege">
    update t_role_privilege
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="privilegeCode != null">
        privilege_code = #{privilegeCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="com.provider.model.RolePrivilege">
    update t_role_privilege
    set role_id = #{roleId,jdbcType=INTEGER},
      privilege_code = #{privilegeCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <select id="countByCriteria" parameterType="com.provider.model.RolePrivilegeCriteria" resultType="java.lang.Integer">
    select count(*) from t_role_privilege
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </select>
  <sql id="mysqlDialectPage">
    <if test="page != null and page.begin != null and page.begin gte 0">
      limit #{page.begin}
    </if>
    <if test="page != null and page.pageSize != null and page.pageSize gte 0">
      , #{page.pageSize}
    </if>
  </sql>
</mapper>