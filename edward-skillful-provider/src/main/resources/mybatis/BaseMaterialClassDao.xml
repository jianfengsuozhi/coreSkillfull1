<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.provider.dao.BaseMaterialClassDao">
  <resultMap id="Base_Result_Map" type="com.provider.model.BaseMaterialClass">
    <constructor>
      <idArg column="class_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="class_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="class_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parent_hospital_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="parent_class_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_no" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="class_status" javaType="java.lang.Short" jdbcType="SMALLINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Criteria_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    class_id, class_name, class_code, parent_hospital_id, parent_class_code, order_no, 
    class_status, create_time, modify_time
  </sql>
  <select id="selectByCriteria" parameterType="com.provider.model.BaseMaterialClassCriteria" resultMap="Base_Result_Map">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_material_class
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="mysqlDialectPage" />
  </select>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="Base_Result_Map">
    select 
    <include refid="Base_Column_List" />
    from base_material_class
    where class_id = #{classId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from base_material_class
    where class_id = #{classId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.provider.model.BaseMaterialClassCriteria">
    delete from base_material_class
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.provider.model.BaseMaterialClass">
    <selectKey keyProperty="classId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_material_class (class_name, class_code, parent_hospital_id, 
      parent_class_code, order_no, class_status, 
      create_time, modify_time)
    values (#{className,jdbcType=VARCHAR}, #{classCode,jdbcType=VARCHAR}, #{parentHospitalId,jdbcType=INTEGER}, 
      #{parentClassCode,jdbcType=VARCHAR}, #{orderNo,jdbcType=INTEGER}, #{classStatus,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.provider.model.BaseMaterialClass">
    <selectKey keyProperty="classId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_material_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="className != null">
        class_name,
      </if>
      <if test="classCode != null">
        class_code,
      </if>
      <if test="parentHospitalId != null">
        parent_hospital_id,
      </if>
      <if test="parentClassCode != null">
        parent_class_code,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="classStatus != null">
        class_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="classCode != null">
        #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="parentHospitalId != null">
        #{parentHospitalId,jdbcType=INTEGER},
      </if>
      <if test="parentClassCode != null">
        #{parentClassCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="classStatus != null">
        #{classStatus,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="com.provider.model.BaseMaterialClassCriteria" resultType="java.lang.Long">
    select count(*) from base_material_class
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map">
    update base_material_class
    <set>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.classCode != null">
        class_code = #{record.classCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentHospitalId != null">
        parent_hospital_id = #{record.parentHospitalId,jdbcType=INTEGER},
      </if>
      <if test="record.parentClassCode != null">
        parent_class_code = #{record.parentClassCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.classStatus != null">
        class_status = #{record.classStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update base_material_class
    set class_id = #{record.classId,jdbcType=INTEGER},
      class_name = #{record.className,jdbcType=VARCHAR},
      class_code = #{record.classCode,jdbcType=VARCHAR},
      parent_hospital_id = #{record.parentHospitalId,jdbcType=INTEGER},
      parent_class_code = #{record.parentClassCode,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=INTEGER},
      class_status = #{record.classStatus,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByIdSelective" parameterType="com.provider.model.BaseMaterialClass">
    update base_material_class
    <set>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="classCode != null">
        class_code = #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="parentHospitalId != null">
        parent_hospital_id = #{parentHospitalId,jdbcType=INTEGER},
      </if>
      <if test="parentClassCode != null">
        parent_class_code = #{parentClassCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="classStatus != null">
        class_status = #{classStatus,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where class_id = #{classId,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="com.provider.model.BaseMaterialClass">
    update base_material_class
    set class_name = #{className,jdbcType=VARCHAR},
      class_code = #{classCode,jdbcType=VARCHAR},
      parent_hospital_id = #{parentHospitalId,jdbcType=INTEGER},
      parent_class_code = #{parentClassCode,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=INTEGER},
      class_status = #{classStatus,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where class_id = #{classId,jdbcType=INTEGER}
  </update>
  <sql id="mysqlDialectPage">
    <if test="page != null and page.begin != null and page.begin gte 0">
      offset #{page.begin}
    </if>
    <if test="page != null and page.pageSize != null and page.pageSize gte 0">
      limit #{page.pageSize}
    </if>
  </sql>
</mapper>